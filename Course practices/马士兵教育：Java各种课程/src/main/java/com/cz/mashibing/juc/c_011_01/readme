synchronized的底层实现 （hotspot 实现）
JDK早期的 重量级 - OS
后来的改进
锁升级的概念：
    我就是厕所所长 （一 二）

sync (Object)
markword 记录这个线程ID （偏向锁）
如果线程争用：升级为 自旋锁
10次以后，
升级为重量级锁 - OS

执行时间短（加锁代码），线程数少，用自旋（不经过 OS 内核态，没有上下文切换、OS 线程调度等开销）
执行时间长，线程数多，用系统锁，即由 OS 来管理

第一部分内容回顾：
线程的概念、启动方式、常用方法
不要 synchronized 锁定字符串常量、Integer、Long 等类型及其对象
线程同步
    - synchronized
        锁的是对象不是代码
        this XX.class
        锁定方法 非锁定方法 同时执行
        锁升级
            偏向锁 -> 自旋锁 -> 重量级锁
